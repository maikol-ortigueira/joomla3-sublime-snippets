<snippet>
	<content><![CDATA[// Load dependent classes.
require_once JPATH_SITE . '/components/com_${TM_COMPONENT/(.+)/\L\1/g}/helpers/route.php';

// Include the component models.
JModelLegacy::addIncludePath(JPATH_SITE . '/components/com_${TM_COMPONENT/(.+)/\L\1/g}/models', '${TM_COMPONENT/(.+)/\u\1/g}Model');

/**
 * Helper for mod_${1/(.+)/\L\1/g}.
 *
 * @package     ${TM_COMPONENT/(.+)/\u\1/g}
 * @subpackage  mod_${TM_COMPONENT/(.+)/\L\1/g}
 * @author      $TM_FULLNAME <$TM_EMAIL>
 * @since       $TM_VERSION
 */
abstract class Mod${1:${TM_MODULE/(.+)/\u\1/g}Latest}Helper
{
	/**
	 * Get a list of the ${3/(.+)/\L\1/g} items.
	 *
	 * @param   JRegistry  &\$params  The module options.
	 *
	 * @return  array
	 *
	 * @since   $TM_VERSION
	 */
	public static function getList(& \$params)
	{
		// Get the dbo.
		\$db = JFactory::getDbo();

		// Get an instance of the generic ${2/(.+)/\L\1/g} model.
		\$model = JModelLegacy::getInstance('${2:${TM_PLURAL/(.+)/\u\1/g}}', '${TM_COMPONENT/(.+)/\u\1/g}Model', array('ignore_request' => true));

		// Set application parameters in model.
		\$app       = JFactory::getApplication();
		\$appParams = \$app->getParams();
		\$model->setState('params', \$appParams);

		// Set the filters based on the module params.
		\$model->setState('list.start', 0);
		\$model->setState('list.limit', (int) \$params->get('count', 5));
		\$model->setState('filter.state', 1);

		// Access filter.
		\$access     = !JComponentHelper::getParams('com_${TM_COMPONENT/(.+)/\L\1/g}')->get('show_noauth');
		\$authorised = JAccess::getAuthorisedViewLevels(JFactory::getUser()->get('id'));
		\$model->setState('filter.access', \$access);

		// User filter.
		\$userId = JFactory::getUser()->get('id');

		switch (\$params->get('user_id'))
		{
			case 'by_me':
				\$model->setState('filter.author_id', (int) \$userId);
				break;
			case 'not_me':
				\$model->setState('filter.author_id', (int) \$userId);
				\$model->setState('filter.author_id.include', false);
				break;

			case '0':
				break;

			default:
				\$model->setState('filter.author_id', (int) \$params->get('user_id'));
				break;
		}

		// Filter by language.
		\$model->setState('filter.language', \$app->getLanguageFilter());

		// Featured switch.
		switch (\$params->get('show_featured'))
		{
			case '1':
				\$model->setState('filter.featured', 'only');
				break;
			case '0':
				\$model->setState('filter.featured', 'hide');
				break;
			default:
				\$model->setState('filter.featured', 'show');
				break;
		}

		// Set ordering.
		\$order_map = array(
			'm_dsc'  => 'a.modified DESC, a.created',
			'mc_dsc' => 'CASE WHEN (a.modified = ' . \$db->quote(\$db->getNullDate()) . ') THEN a.created ELSE a.modified END',
			'c_dsc'  => 'a.created',
			'p_dsc'  => 'a.publish_up',
			'random' => 'RAND()',
		);
		\$ordering  = JArrayHelper::getValue(\$order_map, \$params->get('ordering'), 'a.publish_up');
		\$dir       = 'DESC';

		\$model->setState('list.ordering', \$ordering);
		\$model->setState('list.direction', \$dir);

		\$items = \$model->getItems();

		foreach (\$items as &\$item)
		{
			\$item->slug = \$item->id . ':' . \$item->alias;
			\$item->link = ${TM_COMPONENT/(.+)/\u\1/g}HelperRoute::get${3:${2/(.+)(s\b)/\u\1/g}}Route(\$item->slug);

			if (\$access || in_array(\$item->access, \$authorised))
			{
				// We know that user has the privilege to view the ${3/(.+)/\L\1/g}.
				\$item->link = JRoute::_(${TM_COMPONENT/(.+)/\u\1/g}HelperRoute::get${3/(.+)/\u\1/g}Route(\$item->slug));
			}
			else
			{
				\$item->link = JRoute::_('index.php?option=com_users&view=login');
			}
		}

		return \$items;
	}
}

]]></content>
	<tabTrigger>jsitemodulehelper-latest-nocategory</tabTrigger>
	<scope>source.php</scope>
</snippet>
