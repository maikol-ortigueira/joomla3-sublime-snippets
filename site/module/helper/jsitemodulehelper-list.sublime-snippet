<snippet>
	<content><![CDATA[// Load dependent classes.
require_once JPATH_SITE . '/components/com_${TM_COMPONENT/(.+)/\L\1/g}/helpers/route.php';

// Include the component models.
JModelLegacy::addIncludePath(JPATH_SITE . '/components/com_${TM_COMPONENT/(.+)/\L\1/g}/models', '${TM_COMPONENT/(.+)/\u\1/g}Model');

/**
 * Helper for mod_${1/(.+)/\L\1/g}.
 *
 * @package     ${TM_COMPONENT/(.+)/\u\1/g}
 * @subpackage  mod_${TM_COMPONENT/(.+)/\L\1/g}
 * @author      $TM_FULLNAME <$TM_EMAIL>
 * @since       $TM_VERSION
 */
abstract class Mod${1:${TM_MODULE/(.+)/\u\1/g}}Helper
{
	/**
	 * Get a list of the service items.
	 *
	 * @param   JRegistry  &\$params  The module options.
	 *
	 * @return  array
	 *
	 * @since   $TM_VERSION
	 */
	public static function getList(& \$params)
	{
		// Get the application.
		\$app = JFactory::getApplication();

		// Get an instance of the generic ${2/(.+)/\L\1/g} model.
		\$model = JModelLegacy::getInstance('${2:${TM_PLURAL/(.+)/\u\1/g}}', '${TM_COMPONENT/(.+)/\u\1/g}Model', array('ignore_request' => true));

		// Set application parameters in model.
		\$appParams = \$app->getParams();
		\$model->setState('params', \$appParams);

		// Set the filters based on the module params.
		\$model->setState('list.start', 0);
		\$model->setState('list.limit', (int) \$params->get('count', 5));

		\$model->setState('filter.state', 1);

		\$model->setState('list.select', 'a.id, a.catid, a.${3:title}, a.alias, a.description, a.access, a.params, a.created');

		// Access filter.
		\$access = !JComponentHelper::getParams('com_${TM_COMPONENT/(.+)/\L\1/g}')->get('show_noauth');
		\$authorised = JAccess::getAuthorisedViewLevels(JFactory::getUser()->get('id'));
		\$model->setState('filter.access', \$access);

		// Category filter.
		\$model->setState('filter.category_id', \$params->get('catid', array()));

		// Filter by language.
		\$model->setState('filter.language', \$app->getLanguageFilter());

		// Set ordering.
		\$ordering = \$params->get('ordering', 'a.publish_up');
		\$model->setState('list.ordering', \$ordering);

		if (trim(\$ordering) == 'rand()')
		{
			\$model->setState('list.direction', '');
		}
		else
		{
			\$model->setState('list.direction', 'DESC');
		}

		// Retrieve Content.
		\$items = \$model->getItems();

		foreach (\$items as &\$item)
		{
			\$item->slug    = \$item->id . ':' . \$item->alias;
			\$item->catslug = \$item->catid . ':' . \$item->category_alias;

			if (\$access || in_array(\$item->access, \$authorised))
			{
				// We know that user has the privilege to view the ${4/(.+)/\L\1/g}.
				\$item->link = JRoute::_(${TM_COMPONENT/(.+)/\u\1/g}HelperRoute::get${4/(.+)/\u\1/g}Route(\$item->slug, \$item->catslug));
				\$item->linkText = JText::_('MOD_${1/(.+)/\U\1/g}_READMORE');
			}
			else
			{
				\$item->link = JRoute::_('index.php?option=com_users&view=login');
				\$item->linkText = JText::_('MOD_${1/(.+)/\U\1/g}_READMORE_REGISTER');
			}

			\$item->description = JHtml::_('content.prepare', \$item->description, '', 'mod_${1/(.+)/\L\1/g}.content');

			if (!\$params->get('image'))
			{
				\$item->description = preg_replace('/<img[^>]*>/', '', \$item->description);
			}

			\$results = \$app->triggerEvent('onContentAfterDisplay', array('com_${TM_COMPONENT/(.+)/\L\1/g}.${4:${TM_SINGULAR/(.+)/\L\1/g}}', &\$item, &\$params, 1));
			\$item->afterDisplayTitle = trim(implode("\n", \$results));

			\$results = \$app->triggerEvent('onContentBeforeDisplay', array('com_${TM_COMPONENT/(.+)/\L\1/g}.${4/(.+)/\L\1/g}', &\$item, &\$params, 1));
			\$item->beforeDisplayContent = trim(implode("\n", \$results));
		}

		return \$items;
	}
}

]]></content>
	<tabTrigger>jsitemodulehelper-list</tabTrigger>
	<scope>source.php</scope>
</snippet>
