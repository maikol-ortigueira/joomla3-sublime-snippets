<snippet>
	<content><![CDATA[// Register dependent classes.
JLoader::register('${TM_COMPONENT/(.+)/\u\1/g}Helper', JPATH_ADMINISTRATOR . '/components/com_${TM_COMPONENT/(.+)/\L\1/g}/helpers/${TM_COMPONENT/(.+)/\L\1/g}.php');
JLoader::register('CategoryHelperAssociation', JPATH_ADMINISTRATOR . '/components/com_categories/helpers/association.php');

/**
 * ${TM_COMPONENT/(.+)/\u\1/g} Component Association Helper.
 *
 * @package     ${TM_COMPONENT/(.+)/\u\1/g}
 * @subpackage  com_${TM_COMPONENT/(.+)/\L\1/g}
 * @author      $TM_FULLNAME <$TM_EMAIL>
 * @since       $TM_VERSION
 */
abstract class ${TM_COMPONENT/(.+)/\u\1/g}HelperAssociation extends CategoryHelperAssociation
{
	/**
	 * Method to get the associations for a given item.
	 *
	 * @param   integer  \$id    Id of the item.
	 * @param   string   \$view  Name of the view.
	 *
	 * @return  array  Array of associations for the item.
	 *
	 * @since   $TM_VERSION
	 */
	public static function getAssociations(\$id = 0, \$view = null)
	{
		// Load route helper.
		jimport('helper.route', JPATH_COMPONENT_SITE);

		// Initialiase variables.
		\$app  = JFactory::getApplication();
		\$view = is_null(\$view) ? \$app->input->get('view') : \$view;
		\$id   = empty(\$id) ? \$app->input->getInt('id') : \$id;

		if (\$view == '${1:${TM_SINGULAR/(.+)/\L\1/g}}')
		{
			if (\$id)
			{
				\$associations = JLanguageAssociations::getAssociations('com_${TM_COMPONENT/(.+)/\L\1/g}', '#__${TM_COMPONENT/(.+)/\L\1/g}${2:_${1/(.+)/\L\1/g}s}', 'com_${TM_COMPONENT/(.+)/\L\1/g}.item', \$id);
				\$return       = array();

				foreach (\$associations as \$tag => \$item)
				{
					\$return[\$tag] = ${TM_COMPONENT/(.+)/\u\1/g}HelperRoute::get${1/(.+)/\u\1/g}Route(\$item->id, \$item->catid, \$item->language);
				}

				return \$return;
			}
		}

		if (\$view == 'category' || \$view == 'categories')
		{
			return self::getCategoryAssociations(\$id, 'com_${TM_COMPONENT/(.+)/\L\1/g}');
		}

		return array();
	}
}

]]></content>
	<tabTrigger>jsitehelperassociation</tabTrigger>
	<scope>source.php</scope>
</snippet>
