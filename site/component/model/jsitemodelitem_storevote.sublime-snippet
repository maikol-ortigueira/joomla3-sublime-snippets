<snippet>
	<content><![CDATA[/**
 * Save user vote on ${1:${TM_SINGULAR/(.+)/\L\1/g}}.
 *
 * @param   integer  \$pk    The ${1/(.+)/\L\1/g} id.
 * @param   integer  \$rate  Voting rate.
 *
 * @return  boolean  Return true on success.
 */
public function storeVote(\$pk = 0, \$rate = 0)
{
	if (\$rate >= 1 && \$rate <= 5 && \$pk > 0)
	{
		\$userIP = \$_SERVER['REMOTE_ADDR'];

		// Initialize variables.
		\$db    = JFactory::getDbo();
		\$query = \$db->getQuery(true);

		// Create the base select statement.
		\$query->select('*')
			->from(\$db->quoteName('#__${TM_COMPONENT/(.+)/\L\1/g}$2_rating'))
			->where(\$db->quoteName('${1/(.+)/\L\1/g}_id') . ' = ' . (int) \$pk);

		// Set the query and load the result.
		\$db->setQuery(\$query);
		\$rating = \$db->loadObject();

		// Check for a database error.
		if (\$db->getErrorNum())
		{
			JError::raiseWarning(500, \$db->getErrorMsg());

			return false;
		}

		// There are no ratings yet, so lets insert our rating.
		if (!\$rating)
		{
			\$query = \$db->getQuery(true);

			// Create the base insert statement.
			\$query->insert(\$db->quoteName('#__${TM_COMPONENT/(.+)/\L\1/g}$2_rating'))
				->columns(array(\$db->quoteName('${1/(.+)/\L\1/g}_id'), \$db->quoteName('lastip'), \$db->quoteName('rating_sum'), \$db->quoteName('rating_count')))
				->values((int) \$pk . ', ' . \$db->quote(\$userIP) . ',' . (int) \$rate . ', 1');

			// Set the query and execute the insert.
			\$db->setQuery(\$query);

			try
			{
				\$db->execute();
			}
			catch (RuntimeException \$e)
			{
				JError::raiseWarning(500, \$e->getMessage());

				return false;
			}
		}
		else
		{
			if (\$userIP != (\$rating->lastip))
			{
				\$query = \$db->getQuery(true);

				// Create the base update statement.
				\$query->update(\$db->quoteName('#__${TM_COMPONENT/(.+)/\L\1/g}$2_rating'))
					->set(\$db->quoteName('rating_count') . ' = rating_count + 1')
					->set(\$db->quoteName('rating_sum') . ' = rating_sum + ' . (int) \$rate)
					->set(\$db->quoteName('lastip') . ' = ' . \$db->quote(\$userIP))
					->where(\$db->quoteName('${1/(.+)/\L\1/g}_id') . ' = ' . (int) \$pk);

				// Set the query and execute the update.
				\$db->setQuery(\$query);

				try
				{
					\$db->execute();
				}
				catch (RuntimeException \$e)
				{
					JError::raiseWarning(500, \$e->getMessage());

					return false;
				}
			}
			else
			{
				return false;
			}
		}

		return true;
	}

	JError::raiseWarning('SOME_ERROR_CODE', JText::sprintf('COM_${TM_COMPONENT/(.+)/\U\1/g}_INVALID_RATING', \$rate), "${TM_COMPONENT/(.+)/\u\1/g}Model${1/(.+)/\u\1/g}::storeVote(\$rate)");

	return false;
}]]></content>
	<tabTrigger>jsitemodelitem_storevote</tabTrigger>
	<scope>source.php</scope>
</snippet>
