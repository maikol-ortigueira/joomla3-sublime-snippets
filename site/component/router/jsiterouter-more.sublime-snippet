<snippet>
	<content><![CDATA[/**
 * Build the route for the com_${TM_COMPONENT/(.+)/\L\1/g} component
 *
 * @param   array  &\$query  An array of URL arguments
 *
 * @return  array  The URL arguments to use to assemble the subsequent URL.
 *
 * @since   $TM_VERSION
 */
function ${TM_COMPONENT/(.+)/\L\1/g}BuildRoute(& \$query)
{
	\$segments = array();

	// Get a menu item based on Itemid or currently active
	\$app      = JFactory::getApplication();
	\$menu     = \$app->getMenu();
	\$params   = JComponentHelper::getParams('com_${TM_COMPONENT/(.+)/\L\1/g}');
	\$advanced = \$params->get('sef_advanced_link', 1);

	// We need a menu item. Either the one specified in the query, or the current active one if none specified
	if (empty(\$query['Itemid']))
	{
		\$menuItem = \$menu->getActive();
	}
	else
	{
		\$menuItem = \$menu->getItem(\$query['Itemid']);
	}

	\$mView = (empty(\$menuItem->query['view'])) ? null : \$menuItem->query['view'];
	\$mId   = (empty(\$menuItem->query['id'])) ? null : \$menuItem->query['id'];

	if (isset(\$query['view']))
	{
		\$view = \$query['view'];

		if (empty(\$query['Itemid']))
		{
			\$segments[] = \$query['view'];
		}
	}

	// Are we dealing with an ${2:${TM_COMPONENT/(.+)(s\b)/\L\1/g}} that is attached to a menu item?
	if (isset(\$query['view']) && (\$mView == \$query['view']) and (isset(\$query['id'])) and (\$mId == (int) \$query['id']))
	{
		unset(\$query['view']);
		unset(\$query['id']);

		return \$segments;
	}

	if (isset(\$view) and (\$view == '${2/(.+)/\L\1/g}' or \$view == '${3:${TM_SINGULAR/(.+)/\L\1/g}}'))
	{
		if (\$mId != (int) \$query['id'] || \$mView != \$view)
		{
			if (\$view == '${2/(.+)/\L\1/g}' or \$view == '${3/(.+)/\L\1/g}')
			{
				if (\$advanced)
				{
					list(\$tmp, \$id) = explode(':', \$query['id'], 2);
				}
				else
				{
					\$id = \$query['id'];
				}

				\$segments[] = \$id;
			}
		}

		unset(\$query['id']);
	}

	if (isset(\$query['layout']))
	{
		if (!empty(\$query['Itemid']) && isset(\$menuItem->query['layout']))
		{
			if (\$query['layout'] == \$menuItem->query['layout'])
			{
				unset(\$query['layout']);
			}
		}
		else
		{
			if (\$query['layout'] == 'default')
			{
				unset(\$query['layout']);
			}
		}
	}

	return \$segments;
}

/**
 * Parse the segments of a URL.
 *
 * @param   array  \$segments  The segments of the URL to parse.
 *
 * @return  array  The URL attributes to be used by the application.
 *
 * @since   $TM_VERSION
 */
function ${TM_COMPONENT/(.+)/\L\1/g}ParseRoute(\$segments)
{
	\$vars = array();

	// Get the active menu item.
	\$app      = JFactory::getApplication();
	\$menu     = \$app->getMenu();
	\$item     = \$menu->getActive();
	\$params   = JComponentHelper::getParams('com_${TM_COMPONENT/(.+)/\L\1/g}');
	\$advanced = \$params->get('sef_advanced_link', 1);

	// Count route segments.
	\$count = count(\$segments);

	// Standard routing for ${TM_COMPONENT/(.+)/\L\1/g}.
	if (!isset(\$item))
	{
		\$vars['view'] = \$segments[0];
		\$vars['id']   = \$segments[\$count - 1];

		return \$vars;
	}

	\$found = 0;

	foreach (\$segments as \$segment)
	{
		\$segment = \$advanced ? str_replace(':', '-', \$segment) : \$segment;

		if (\$found == 0)
		{
			if (\$advanced)
			{
				\$db = JFactory::getDbo();

				if (\$item->query['view'] == '${TM_COMPONENT/(.+)/\L\1/g}')
				{
					\$query = 'SELECT id FROM #__${TM_COMPONENT/(.+)/\L\1/g} WHERE alias = ' . \$db->quote(\$segment);
				}

				if (\$item->query['view'] == '${4:${3/(.+)/\L\1/g}s}')
				{
					\$query = 'SELECT id FROM #__${TM_COMPONENT/(.+)/\L\1/g}_${4/(.+)/\L\1/g} WHERE alias = ' . \$db->quote(\$segment);
				}

				\$db->setQuery(\$query);
				\$nid = \$db->loadResult();
			}
			else
			{
				\$nid = \$segment;
			}

			\$vars['id'] = \$nid;

			if (\$item->query['view'] == '${TM_COMPONENT/(.+)/\L\1/g}')
			{
				\$vars['view'] = '${2/(.+)/\L\1/g}';
			}

			if (\$item->query['view'] == '${4/(.+)/\L\1/g}')
			{
				\$vars['view'] = '${3/(.+)/\L\1/g}';
			}
		}

		\$found = 0;
	}

	return \$vars;
}

]]></content>
	<tabTrigger>jsiterouter-more</tabTrigger>
	<scope>source.php</scope>
</snippet>
