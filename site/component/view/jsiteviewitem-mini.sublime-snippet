<snippet>
	<content><![CDATA[/**
 * HTML ${1/(.+)/\u\1/g} View class for the ${TM_COMPONENT/(.+)/\u\1/g} component.
 *
 * @package     ${TM_COMPONENT/(.+)/\u\1/g}
 * @subpackage  com_${TM_COMPONENT/(.+)/\L\1/g}
 * @author      $TM_FULLNAME <$TM_EMAIL>
 * @since       $TM_VERSION
 */
class ${TM_COMPONENT/(.+)/\u\1/g}View${1:${TM_SINGULAR/(.+)/\u\1/g}} extends JViewLegacy
{
	protected \$item;

	protected \$params;

	protected \$print;

	protected \$state;

	protected \$user;

	/**
	 * Method to display the view.
	 *
	 * @param   string  \$tpl  The template file to include.
	 *
	 * @return  mixed  False on error, null otherwise.
	 *
	 * @since   $TM_VERSION
	 */
	public function display(\$tpl = null)
	{
		// Initialiase variables.
		\$app         = JFactory::getApplication();
		\$user        = JFactory::getUser();
		\$userId      = \$user->get('id');

		// Get some data from the models.
		\$this->item  = \$this->get('Item');
		\$this->print = \$app->input->getBool('print');
		\$this->state = \$this->get('State');
		\$this->user  = \$user;

		// Check for errors.
		if (count(\$errors = \$this->get('Errors')))
		{
			throw new RuntimeException(implode("\n", \$errors), 500);

			return false;
		}

		// Create a shortcut for \$item.
		\$item = &\$this->item;

		// Add router helpers.
		\$item->slug = \$item->alias ? (\$item->id . ':' . \$item->alias) : \$item->id;
		\$item->link = ${TM_COMPONENT/(.+)/\u\1/g}HelperRoute::get${1/(.+)/\u\1/g}Route(\$item->slug);

		// Merge ${1/(.+)/\L\1/g} params. If this is single-${1/(.+)/\L\1/g} view, menu params override ${1/(.+)/\L\1/g} params
		// Otherwise, ${1/(.+)/\L\1/g} params override menu item params
		\$this->params = \$this->state->get('params');
		\$active = \$app->getMenu()->getActive();

		// Check to see which parameters should take priority
		if (\$active)
		{
			\$currentLink = \$active->link;

			// If the current view is the active item and an ${1/(.+)/\L\1/g} view for this ${1/(.+)/\L\1/g}, then the menu item params take priority
			if (strpos(\$currentLink, 'view=${1/(.+)/\L\1/g}') && (strpos(\$currentLink, '&id=' . (string) \$item->id)))
			{
				// Load layout from active query (in case it is an alternative menu item)
				if (isset(\$active->query['layout']))
				{
					\$this->setLayout(\$active->query['layout']);
				}
			}
		}

		\$offset = \$this->state->get('list.offset');

		// Escape strings for HTML output.
		\$this->pageclass_sfx = htmlspecialchars(\$this->params->get('pageclass_sfx'));

		\$this->_prepareDocument();

		parent::display(\$tpl);
	}

	/**
	 * Prepares the document.
	 *
	 * @return  void
	 *
	 * @since   $TM_VERSION
	 */
	protected function _prepareDocument()
	{
		// Initialiase variables.
		\$app     = JFactory::getApplication();
		\$menus   = \$app->getMenu();
		\$pathway = \$app->getPathway();
		\$title   = null;

		// Because the application sets a default page title,
		// we need to get it from the menu item itself.
		\$menu = \$menus->getActive();

		if (\$menu)
		{
			\$this->params->def('page_heading', \$this->params->get('page_title', \$menu->title));
		}
		else
		{
			\$this->params->def('page_heading', JText::_('COM_${TM_COMPONENT/(.+)/\U\1/g}_${1/(.+)/\U\1/g}_DEFAULT_PAGE_TITLE'));
		}

		\$title = \$this->params->get('page_title', '');

		\$id = (int) @\$menu->query['id'];

		// If the menu item does not concern this ${1/(.+)/\L\1/g}.
		if (\$menu && (\$menu->query['option'] != 'com_cities' || \$menu->query['view'] != '${1/(.+)/\L\1/g}' || \$id != \$this->item->id))
		{
			// If this is not a single ${1/(.+)/\L\1/g} menu item, set the page title to the ${1/(.+)/\L\1/g} ${2/(.+)/\L\1/g}.
			if (\$this->item->${2/(.+)/\L\1/g})
			{
				\$title = \$this->item->${2/(.+)/\L\1/g};
			}

			\$path = array(
				array(
					'title' => \$menu->title,
					'link' => \$menu->link
				),
				array(
					'title' => \$this->item->${2/(.+)/\L\1/g},
					'link' => ''
				)
			);

			foreach (\$path as \$item)
			{
				\$pathway->addItem(\$item['title'], \$item['link']);
			}
		}
		else
		{
			\$pathway->addItem(\$this->item->${2:title}, '');
		}

		// Check for empty title and add site name if param is set.
		if (empty(\$title))
		{
			\$title = \$app->getCfg('sitename');
		}
		elseif (\$app->getCfg('sitename_pagetitles', 0) == 1)
		{
			\$title = JText::sprintf('JPAGETITLE', \$app->getCfg('sitename'), \$title);
		}
		elseif (\$app->getCfg('sitename_pagetitles', 0) == 2)
		{
			\$title = JText::sprintf('JPAGETITLE', \$title, \$app->getCfg('sitename'));
		}

		\$this->document->setTitle(\$title);

		// Configure the document meta-description.
		if (\$this->params->get('menu-meta_description'))
		{
			\$this->document->setDescription(\$this->params->get('menu-meta_description'));
		}

		// Configure the document meta-keywords.
		if (\$this->params->get('menu-meta_keywords'))
		{
			\$this->document->setMetadata('keywords', \$this->params->get('menu-meta_keywords'));
		}

		// Configure the document robots.
		if (\$this->params->get('robots'))
		{
			\$this->document->setMetadata('robots', \$this->params->get('robots'));
		}

		// If there is a pagebreak heading or title, add it to the page title.
		if (!empty(\$this->item->page_title))
		{
			\$this->item->${2/(.+)/\L\1/g} = \$this->item->${2/(.+)/\L\1/g} . ' - ' . \$this->item->page_title;
			\$this->document->setTitle(\$this->item->page_title . ' - ' . JText::sprintf('PLG_CONTENT_PAGEBREAK_PAGE_NUM', \$this->state->get('list.offset') + 1));
		}

		if (\$this->print)
		{
			\$this->document->setMetaData('robots', 'noindex, nofollow');
		}
	}
}

]]></content>
	<tabTrigger>jsiteviewitem-mini</tabTrigger>
	<scope>source.php</scope>
</snippet>
